package 代码随想录一刷.动态规划;

/**
 * 给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。
 * 二叉搜索树是一个二叉树，且节点值大于左子树的所有值，小于右子树的所有值。
 */

//思路：
//    总节点数为n的树，左子树节点和+右子树节点和=n-1
//    因此
//    f(n) = f(0)*f(n-1)+f(1)*f(n-2)+...+f(n-1)*f(0)
public class Solution_96 {
    public int numTrees(int n) {
        //dp[n]是节点数为n的不同的二叉搜索树的个数
        int dp[] = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        //遍历节点数
        for (int i = 2; i <= n; i++) {
            // 遍历左子树节点数
            for (int j = 0; j < i; j++) {
                dp[i] += dp[j] * dp[i - j - 1];
            }

        }
        return dp[n];
    }
}
